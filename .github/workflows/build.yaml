# A very typical "build" workflow that produces a container
# image every time a commit is merged into the main branch:
#  - docker login
#  - docker build .
#  - docker push
name: build

on:
  push:
    branches:
      - "main"

env:
  # The image to be build. E.g: ghcr.io/saas-examples-harden-simple-app:9ce...6b
  IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ env.IMAGE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          tags: ${{ env.IMAGE }}
          push: true

  # When the build is done (i.e. the image is already pushed to the registry),
  # the "harden" workflow kicks in. It'll take the unoptimized image produced
  # by the "build" workflow and will create an optimized (aka "hardened") version of it.
  harden:
    needs: build
    uses: ./.github/workflows/harden.yaml
    secrets: inherit
    with:
      image: ${{ needs.build.outputs.image }}


  # The (optional) callable workflow to create the Vulnerability Scan Report 
  # of the unoptimized image produced by the "build" workflow. 
  vulnerability-scan:
    needs: build
    uses: ./.github/workflows/vscan.yaml
    secrets: inherit
    with:
      image: ${{ needs.build.outputs.image }}
      name: unoptimized-image-vuln-scan-report

